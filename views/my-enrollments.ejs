<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %> | DSH에듀</title>
  <meta name="description" content="<%= description %>">
  
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  
  <!-- AOS Animation Library -->
  <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
  
  <!-- Swiper CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css" />
  
  <!-- Custom CSS -->
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <!-- Header -->
  <%- include('./partials/header') %>

  <div class="container mt-5 pt-5">
    <div class="row">
      <!-- 왼쪽 사이드바 -->
      <div class="col-md-3 mb-4">
        <div class="card shadow-sm border-0">
          <div class="card-body text-center">
            <div class="mb-3">
              <% if (user.profilePhoto) { %>
                <img src="<%= user.profilePhoto %>" alt="프로필 사진" 
                     class="rounded-circle" style="width: 80px; height: 80px; object-fit: cover;">
              <% } else { %>
                <div class="bg-primary rounded-circle d-inline-flex align-items-center justify-content-center" 
                     style="width: 80px; height: 80px;">
                  <i class="fas fa-user fa-2x text-white"></i>
                </div>
              <% } %>
            </div>
            <h5 class="card-title"><%= user.name %></h5>
            <p class="text-muted small"><%= user.email %></p>
            <span class="badge bg-<%= user.role === 'admin' ? 'warning' : 'primary' %>">
              <%= user.role === 'admin' ? '관리자' : '사용자' %>
            </span>
          </div>
        </div>

        <!-- 네비게이션 -->
        <div class="list-group mt-3">
          <a href="/dashboard" class="list-group-item list-group-item-action">
            <i class="fas fa-tachometer-alt me-2"></i>대시보드
          </a>
          <a href="/dashboard/profile" class="list-group-item list-group-item-action">
            <i class="fas fa-user me-2"></i>내 프로필
          </a>
          <a href="/dashboard/enrollments" class="list-group-item list-group-item-action active">
            <i class="fas fa-list-alt me-2"></i>내 등록 현황
          </a>
          <% if (user.role === 'admin') { %>
          <a href="/admin" class="list-group-item list-group-item-action">
            <i class="fas fa-cogs me-2"></i>관리자 패널
          </a>
          <% } %>
        </div>
      </div>

      <!-- 메인 컨텐츠 -->
      <div class="col-md-9">
        <!-- 헤더 -->
        <div class="d-flex justify-content-between align-items-center mb-4">
          <h2><i class="fas fa-list-alt me-2 text-success"></i>내 등록 현황</h2>
          <a href="/programs" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>새 프로그램 찾기
          </a>
        </div>

        <!-- 통계 카드 -->
        <div class="row g-4 mb-4">
          <div class="col-md-3">
            <div class="card bg-danger text-white">
              <div class="card-body text-center">
                <div class="d-flex align-items-center justify-content-center">
                  <div class="me-3">
                    <i class="fas fa-heart fa-2x"></i>
                  </div>
                  <div>
                    <h4 class="mb-0" id="wishlistEnrollments">0</h4>
                    <small>찜한 프로그램</small>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="col-md-3">
            <div class="card bg-primary text-white">
              <div class="card-body text-center">
                <div class="d-flex align-items-center justify-content-center">
                  <div class="me-3">
                    <i class="fas fa-calendar-check fa-2x"></i>
                  </div>
                  <div>
                    <h4 class="mb-0" id="totalEnrollments">0</h4>
                    <small>총 등록</small>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="col-md-3">
            <div class="card bg-success text-white">
              <div class="card-body text-center">
                <div class="d-flex align-items-center justify-content-center">
                  <div class="me-3">
                    <i class="fas fa-play fa-2x"></i>
                  </div>
                  <div>
                    <h4 class="mb-0" id="activeEnrollments">0</h4>
                    <small>진행 중</small>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="col-md-3">
            <div class="card bg-info text-white">
              <div class="card-body text-center">
                <div class="d-flex align-items-center justify-content-center">
                  <div class="me-3">
                    <i class="fas fa-check fa-2x"></i>
                  </div>
                  <div>
                    <h4 class="mb-0" id="completedEnrollments">0</h4>
                    <small>완료</small>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- 필터 및 검색 -->
        <div class="card shadow-sm border-0 mb-4">
          <div class="card-body">
            <div class="row">
              <div class="col-md-6">
                <div class="input-group">
                  <span class="input-group-text"><i class="fas fa-search"></i></span>
                  <input type="text" class="form-control" placeholder="프로그램 이름으로 검색..." id="searchInput">
                </div>
              </div>
              <div class="col-md-3">
                <select class="form-select" id="statusFilter">
                  <option value="">모든 상태</option>
                  <option value="wishlist">찜한 프로그램</option>
                  <option value="pending">대기 중</option>
                  <option value="confirmed">확정</option>
                  <option value="in-progress">진행 중</option>
                  <option value="completed">완료</option>
                </select>
              </div>
              <div class="col-md-3">
                <select class="form-select" id="categoryFilter">
                  <option value="">모든 카테고리</option>
                  <option value="summer">여름 캠프</option>
                  <option value="winter">겨울 캠프</option>
                  <option value="special">특별 프로그램</option>
                </select>
              </div>
            </div>
          </div>
        </div>

        <!-- 등록 현황 목록 -->
        <div id="enrollmentsList">
          <% if (enrollments && enrollments.length > 0) { %>
            <% enrollments.forEach(function(enrollment) { %>
              <div class="card shadow-sm border-0 mb-3 enrollment-card" 
                   data-status="<%= enrollment.status %>" 
                   data-category="<%= enrollment.program?.category || '' %>">
                <div class="card-body">
                  <div class="row align-items-center">
                    <div class="col-md-8">
                      <div class="d-flex align-items-center mb-2">
                        <h5 class="mb-0 me-3"><%= enrollment.program?.title || '프로그램 정보 없음' %></h5>
                        <span class="badge bg-<%= 
                          enrollment.status === 'wishlist' ? 'danger' :
                          enrollment.status === 'confirmed' ? 'success' : 
                          enrollment.status === 'pending' ? 'warning' : 
                          enrollment.status === 'in-progress' ? 'info' : 
                          enrollment.status === 'completed' ? 'primary' : 'secondary'
                        %>">
                          <%= 
                            enrollment.status === 'wishlist' ? '찜한 프로그램' :
                            enrollment.status === 'confirmed' ? '확정' : 
                            enrollment.status === 'pending' ? '대기 중' : 
                            enrollment.status === 'in-progress' ? '진행 중' : 
                            enrollment.status === 'completed' ? '완료' : 
                            enrollment.status === 'cancelled' ? '취소됨' : '알 수 없음'
                          %>
                        </span>
                      </div>
                      <% if (enrollment.program?.startDate && enrollment.program?.endDate) { %>
                        <p class="text-muted mb-2">
                          <i class="fas fa-calendar me-2"></i>
                          <%= new Date(enrollment.program.startDate).toLocaleDateString('ko-KR') %> - 
                          <%= new Date(enrollment.program.endDate).toLocaleDateString('ko-KR') %>
                        </p>
                      <% } %>
                      <p class="text-muted mb-2">
                        <i class="fas fa-clock me-2"></i>등록일: 
                        <%= new Date(enrollment.createdAt).toLocaleDateString('ko-KR') %>
                      </p>
                      <% if (enrollment.student?.name) { %>
                        <p class="text-muted mb-0">
                          <i class="fas fa-user me-2"></i>참가자: <%= enrollment.student.name %>
                        </p>
                      <% } %>
                    </div>
                    <div class="col-md-4 text-end">
                      <% if (enrollment.program?.price || enrollment.program?.originalPrice) { %>
                        <div class="mb-2">
                          <strong class="fs-5 text-primary">
                            $<%= (enrollment.program.price || enrollment.program.originalPrice || 0).toLocaleString() %>
                          </strong>
                        </div>
                      <% } %>
                      <div class="btn-group" role="group">
                        <% if (enrollment.program?._id) { %>
                          <a href="/programs/<%= enrollment.program._id %>" class="btn btn-sm btn-outline-primary">
                            <i class="fas fa-eye"></i> 상세보기
                          </a>
                        <% } %>
                        <% if (enrollment.status === 'wishlist') { %>
                          <button type="button" class="btn btn-sm btn-outline-success" 
                                  onclick="enrollFromWishlist('<%= enrollment._id %>')">
                            <i class="fas fa-plus"></i> 등록하기
                          </button>
                          <button type="button" class="btn btn-sm btn-outline-danger" 
                                  onclick="removeFromWishlist('<%= enrollment.program._id %>')">
                            <i class="fas fa-heart-broken"></i> 찜 해제
                          </button>
                        <% } else if (enrollment.status === 'completed') { %>
                          <button type="button" class="btn btn-sm btn-outline-success" 
                                  onclick="downloadCertificate('<%= enrollment._id %>')">
                            <i class="fas fa-download"></i> 수료증
                          </button>
                        <% } else if (enrollment.status === 'pending' || enrollment.status === 'confirmed') { %>
                          <button type="button" class="btn btn-sm btn-outline-danger" 
                                  onclick="cancelEnrollment('<%= enrollment._id %>')">
                            <i class="fas fa-times"></i> 취소
                          </button>
                        <% } %>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            <% }); %>
          <% } else { %>
            <!-- 데이터가 없을 때 -->
            <div class="card shadow-sm border-0">
              <div class="card-body text-center py-5">
                <div class="mb-4">
                  <i class="fas fa-calendar-plus fa-4x text-muted"></i>
                </div>
                <h5 class="text-muted">등록된 프로그램이 없습니다</h5>
                <p class="text-muted">지금 바로 흥미로운 프로그램에 등록해보세요!</p>
                <a href="/programs" class="btn btn-primary btn-lg">
                  <i class="fas fa-search me-2"></i>프로그램 찾아보기
                </a>
              </div>
            </div>
          <% } %>

        </div>

        <!-- 페이지네이션 -->
        <nav aria-label="등록 현황 페이지네이션" class="mt-4">
          <ul class="pagination justify-content-center">
            <li class="page-item disabled">
              <a class="page-link" href="#" tabindex="-1">이전</a>
            </li>
            <li class="page-item active">
              <a class="page-link" href="#">1</a>
            </li>
            <li class="page-item">
              <a class="page-link" href="#">다음</a>
            </li>
          </ul>
        </nav>
      </div>
    </div>
  </div>

  <!-- Footer -->
  <%- include('./partials/footer') %>
  
  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  
  <!-- AOS Animation Library -->
  <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
  
  <!-- Swiper JS -->
  <script src="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js"></script>
  
  <!-- Translations JS -->
  <script src="/js/translations.js"></script>
  
  <!-- Custom JS -->
  <script src="/js/main.js"></script>
  
  <!-- Initialize AOS -->
  <script>
    AOS.init({
      duration: 800,
      easing: 'ease-in-out',
      once: true
    });
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // 페이지 로드 시 통계 업데이트
      updateStatistics();

      // 검색 및 필터 이벤트
      document.getElementById('searchInput').addEventListener('input', filterEnrollments);
      document.getElementById('statusFilter').addEventListener('change', filterEnrollments);
      document.getElementById('categoryFilter').addEventListener('change', filterEnrollments);
    });

    function updateStatistics() {
      const cards = document.querySelectorAll('.enrollment-card');
      console.log('📊 찾은 카드 수:', cards.length);
      
      let wishlist = 0;
      let active = 0;
      let completed = 0;

      cards.forEach((card, index) => {
        const status = card.dataset.status;
        console.log(`📊 카드 ${index + 1} 상태:`, status);
        
        if (status === 'wishlist') {
          wishlist++;
        } else if (status === 'in-progress') {
          // 진행 중: 관리자가 실제로 진행 중으로 변경한 상태만 포함
          active++;
        } else if (status === 'completed') {
          completed++;
        }
        // pending 상태는 아직 관리자 승인 대기 중이므로 진행 중에 포함하지 않음
      });

      // 총 등록 = 승인됨 + 진행 중 + 완료 (찜하기와 대기 중은 제외)
      let confirmed = 0;
      cards.forEach((card) => {
        if (card.dataset.status === 'confirmed') {
          confirmed++;
        }
      });
      const actualTotal = confirmed + active + completed;

      console.log('📊 최종 통계:', { wishlist, active, completed, actualTotal });

      document.getElementById('wishlistEnrollments').textContent = wishlist;
      document.getElementById('totalEnrollments').textContent = actualTotal;
      document.getElementById('activeEnrollments').textContent = active;
      document.getElementById('completedEnrollments').textContent = completed;
    }

    function filterEnrollments() {
      const searchTerm = document.getElementById('searchInput').value.toLowerCase();
      const statusFilter = document.getElementById('statusFilter').value;
      const categoryFilter = document.getElementById('categoryFilter').value;
      
      const cards = document.querySelectorAll('.enrollment-card');
      
      cards.forEach(card => {
        const title = card.querySelector('h5').textContent.toLowerCase();
        const status = card.dataset.status;
        const category = card.dataset.category;
        
        const matchesSearch = title.includes(searchTerm);
        const matchesStatus = !statusFilter || status === statusFilter;
        const matchesCategory = !categoryFilter || category === categoryFilter;
        
        if (matchesSearch && matchesStatus && matchesCategory) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    }

    // 등록 취소 함수
    function cancelEnrollment(enrollmentId) {
      console.log('🎯 취소 함수 호출됨:', enrollmentId);
      
      const confirmResult = confirm('정말로 이 등록을 취소하시겠습니까?');
      console.log('❓ 사용자 확인 결과:', confirmResult);
      
      if (!confirmResult) {
        console.log('❌ 사용자가 취소함');
        return;
      }

      console.log('🔄 취소 요청 시작:', enrollmentId);
      console.log('🔗 요청 URL:', `/api/enrollments/${enrollmentId}/cancel`);
      
      fetch(`/api/enrollments/${enrollmentId}/cancel`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include'
      })
      .then(response => {
        console.log('📡 응답 상태:', response.status, response.statusText);
        
        if (response.status === 401) {
          console.log('❌ 401 인증 오류');
          showToast('로그인이 필요합니다. 다시 로그인해주세요.', 'error');
          setTimeout(() => window.location.href = '/login', 1500);
          throw new Error('Authentication required');
        }
        
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        return response.json();
      })
      .then(data => {
        console.log('✅ 취소 응답 데이터:', data);
        
        if (data && data.success) {
          showToast('등록이 성공적으로 취소되었습니다.', 'success');
          setTimeout(() => location.reload(), 1500);
        } else if (data) {
          showToast(data.message || '등록 취소에 실패했습니다.', 'error');
        }
      })
      .catch(error => {
        console.error('❌ 취소 오류:', error);
        if (error.message !== 'Authentication required') {
          showToast('오류가 발생했습니다: ' + error.message, 'error');
        }
      });
    }

    // 수료증 다운로드 함수
    function downloadCertificate(enrollmentId) {
      fetch(`/api/enrollments/${enrollmentId}/certificate`, {
        method: 'GET',
        credentials: 'include'
      })
      .then(response => {
        if (response.ok) {
          return response.blob();
        } else {
          throw new Error('수료증을 찾을 수 없습니다.');
        }
      })
      .then(blob => {
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.style.display = 'none';
        a.href = url;
        a.download = `certificate_${enrollmentId}.pdf`;
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        document.body.removeChild(a);
        showToast('수료증 다운로드가 시작됩니다.', 'success');
      })
      .catch(error => {
        console.error('Error:', error);
        showToast('수료증 다운로드에 실패했습니다.', 'error');
      });
    }

    // 찜하기에서 등록하기 함수
    function enrollFromWishlist(enrollmentId) {
      // 간단한 등록 정보로 전환 (실제로는 모달을 띄워서 상세 정보 입력받을 수 있음)
      if (!confirm('이 프로그램을 정식으로 등록하시겠습니까?')) {
        return;
      }

      const studentData = {
        student: {
          name: '학생', // 실제로는 사용자 입력
          age: 15 // 실제로는 사용자 입력
        },
        emergencyContact: {
          name: '비상연락처', // 실제로는 사용자 입력
          phone: '010-0000-0000' // 실제로는 사용자 입력
        }
      };

      fetch(`/api/enrollments/${enrollmentId}/enroll`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(studentData)
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          showToast('성공적으로 등록되었습니다.', 'success');
          setTimeout(() => location.reload(), 1500);
        } else {
          showToast(data.message || '등록에 실패했습니다.', 'error');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        showToast('오류가 발생했습니다.', 'error');
      });
    }

    // 찜하기 해제 함수
    function removeFromWishlist(programId) {
      if (!confirm('찜 목록에서 제거하시겠습니까?')) {
        return;
      }

      fetch(`/api/enrollments/wishlist/${programId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          showToast('찜 목록에서 제거되었습니다.', 'success');
          setTimeout(() => location.reload(), 1500);
        } else {
          showToast(data.message || '제거에 실패했습니다.', 'error');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        showToast('오류가 발생했습니다.', 'error');
      });
    }

    // Toast 메시지 표시 함수
    function showToast(message, type = 'info') {
      // 기존 toast 제거
      const existingToast = document.querySelector('.toast-custom');
      if (existingToast) {
        existingToast.remove();
      }

      const toast = document.createElement('div');
      toast.className = `toast-custom position-fixed top-0 end-0 m-3 p-3 rounded ${type === 'success' ? 'bg-success' : type === 'error' ? 'bg-danger' : 'bg-info'} text-white`;
      toast.style.zIndex = '9999';
      toast.textContent = message;
      
      document.body.appendChild(toast);
      
      setTimeout(() => {
        toast.remove();
      }, 3000);
    }
  </script>
</body>
</html> 